Simulator 验证大纲
    对于Simulator的验证主要分两方面来进行，函数级验证和指令级验证。
一、函数级验证
    函数级验证主要负责验证Simulator的函数调用是否正确，着重验证栈和流水线的执行状态是否正确。重点验证递归函数的调用和主函数的返回、控制流是否正确（分支循环）。另外验证主函数带参的执行。
    验证内容和代码列表如下：
    00、简单的main函数验证，验证代码：00simple.c
    01、函数调用验证，验证代码：01function.c
    02、递归函数调用验证，验证代码：02recursive_func.c
    03、if分支语句验证，验证代码：03if.c
    04、while循环语句验证，验证代码：04while.c
    05、for循环语句验证，验证代码：05for.c
    06、main函数带参验证，验证代码:06main_with_args.c
    
二、指令级验证
    指令级验证主要负责验证Simulator实现的各条指令是否正确，指令验证分为三个部分：数据处理指令、分支跳转指令、访存指令，其中数据处理指令主要验证数据正确性和标志寄存器是否被正确写入，分支跳转指令主要验证跳转位置的正确性，访存指令主要验证存储器读写的正确性。
    验证的主要策略是按代码中不同的域进行验证。
    验证内容和代码列表如下：
    a、数据处理指令的验证（D_Imm_shift、D_Reg_shift、D_Immediate）
	目录：verification/simulator/data_process_inst
    20、opcodes域的验证，验证代码：opcode.s
    21、shift域（前两类）和Rotate域（第三类）的验证，验证代码：shift.s
    22、S域的验证（标志寄存器设置），验证代码：cmsr_logic.s, cmsr_arith.s
    23、PC作为目的寄存器的验证，验证代码:pc_dst.s
    24、乘法和乘加指令的验证，验证代码：mul.s
    
    b、分支跳转指令的验证（主要是条件转移指令的验证）
    30、对cond域的验证和跳转地址正确性的验证，验证代码：30b_cond.c
    31、对L域的验证，验证代码：31b_l.c
    
    c、访存指令的验证
    单数据传输指令的验证：
    40、shift域的验证（L_S_R_Offset），验证代码：40mem_single_shift.s
    41、立即数访存的验证（L_S_I_Offset），验证代码：41mem_single_imm.s
    42、U域的验证，验证代码：42mem_single_U.s
    43、B域的验证，验证代码：43mem_single_B.s
    44、P、W域的验证，验证代码：44mem_single_P_W.s
    半字和有符号字传输指令的验证：
    50、S、H域的验证，验证代码：50mem_Hw_S_H.s
    51、U域的验证，验证代码：51mem_Hw_P.s
    52、P、W域的验证，验证代码：51mem_Hw_P_W.s
